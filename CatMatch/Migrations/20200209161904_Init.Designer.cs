// <auto-generated />
using System;
using CatMatch.Databases.MariaDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CatMatch.Migrations
{
    [DbContext(typeof(CatMatchMariaDbContext))]
    [Migration("20200209161904_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CatMatch.Databases.MariaDb.Models.MatchCat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int>("CatId")
                        .HasColumnName("cat_id")
                        .HasColumnType("int");

                    b.Property<int>("MatchId")
                        .HasColumnName("match_id")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("CatId");

                    b.HasIndex("MatchId");

                    b.ToTable("MatchCats");
                });

            modelBuilder.Entity("CatMatch.Models.Cat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("ImageLink")
                        .HasColumnName("image_link")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("InformationsId")
                        .HasColumnName("information_id")
                        .HasColumnType("int");

                    b.Property<int>("RankId")
                        .HasColumnName("rank_id")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("InformationsId")
                        .IsUnique();

                    b.HasIndex("RankId")
                        .IsUnique();

                    b.ToTable("Cats");
                });

            modelBuilder.Entity("CatMatch.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateUtc")
                        .HasColumnName("date_utc")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Winner")
                        .HasColumnName("winner")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("id");

                    b.ToTable("Matchs");
                });

            modelBuilder.Entity("CatMatch.Models.MatchingInformations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int>("CatId")
                        .HasColumnType("int");

                    b.Property<int>("MatchCount")
                        .HasColumnName("match_count")
                        .HasColumnType("int");

                    b.Property<int>("Victories")
                        .HasColumnName("victories")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("id");

                    b.ToTable("MatchingInformations");
                });

            modelBuilder.Entity("CatMatch.Models.Rank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int>("CatId")
                        .HasColumnName("cat_id")
                        .HasColumnType("int");

                    b.Property<int>("Elo")
                        .HasColumnName("elo")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("id");

                    b.ToTable("Ranks");
                });

            modelBuilder.Entity("CatMatch.Databases.MariaDb.Models.MatchCat", b =>
                {
                    b.HasOne("CatMatch.Models.Cat", "Cat")
                        .WithMany()
                        .HasForeignKey("CatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CatMatch.Models.Match", "Match")
                        .WithMany()
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CatMatch.Models.Cat", b =>
                {
                    b.HasOne("CatMatch.Models.MatchingInformations", "Informations")
                        .WithOne("Cat")
                        .HasForeignKey("CatMatch.Models.Cat", "InformationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CatMatch.Models.Rank", "Rank")
                        .WithOne("Cat")
                        .HasForeignKey("CatMatch.Models.Cat", "RankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
